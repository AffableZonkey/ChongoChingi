---
- name: Restic  | Install restic packages
  dnf:
    state: latest
    name: "{{ item }}"
  with_items:
  - python2-scp
  - python3-scp
  - python3-paramiko
  - python3-dnf-plugins-extras-common
  - python3-dnf-plugins-core
  - autofs
  become: True

#TODO - template the automount
#TODO - start the autofs daemon

- name: copr enable restic repo
  shell: dnf copr enable -y copart/restic
  become: True

- name: copr install restic
  dnf:
    state: latest
    name: restic
  become: True

- name: restic | make sure the backup dir exists
  file:
    path: /opt/Backups
    state: directory
    owner: "{{ ansible_user }}"
    mode: 0755

- name: copy exclude file
  copy:
    src: restic_excludes.txt
    dest: /opt/Backups/restic_excludes.txt
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: copy restic pwd file
  copy:
    src: .restic_info
    dest: "{{ ansible_user_dir }}/"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: create restic repository
  shell: 'restic init --repo /opt/Backups --password-file  "{{ ansible_user_dir }}/.restic_info"'
  args:
    creates: /opt/Backups/config

- name: copy cron.allow is important
  copy:
    src: cron.allow
    dest: /etc/cron.allow
    owner: root
    group: root
    mode: 0644    
 
- name: schedule backups
  cron:
    name: homedirbackup
    hour: 05
    minute: 30
    job: restic -r /opt/Backups/ backup "{{ ansible_user_dir }}" --exclude-file /opt/Backups/restic_excludes.txt --password-file "{{ ansible_user_dir }}/.restic_info"
  notify:
  - reload cron

- name: prune daily backups
  cron:
    name: prune snapshots with restic
    weekday: 0
    hour: 23
    minute: 45
    job: restic -r /opt/Backups/ forget --keep-last 7 --keep-weekly 4 --keep-monthly 3 --keep-yearly 1 --prune  
  notify:
  - reload cron
