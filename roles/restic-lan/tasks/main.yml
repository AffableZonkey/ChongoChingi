---
- name: Restic  | Install restic packages
  dnf:
    state: latest
    name: "{{ item }}"
  loop:
  - restic
  - python3-scp
  - python3-paramiko
  - python3-dnf-plugins-extras-common
  - python3-dnf-plugins-core
  become: True
  become_user: root

- name: Restic | prepare creds
  lineinfile:
    path: /home/zach/.bashrc
    line: "{{ item }}"
    create: yes
  loop:
  - "export AWS_ACCESS_KEY_ID={{ s3_key_id }}"
  - "export AWS_SECRET_ACCESS_KEY={{ s3_access_key }}"
  - "export RESTIC_PASSWORD={{ restic_pass }}"
  - "export RESTIC_REPOSITORY={{ restic_repo }}"
  - "export S3_BUCKET={{ s3_bucket }}"

- name: Restic | test for repo
  command: 'restic -r s3:s3.amazonaws.com/$S3_BUCKET snapshots'
  register: test_repo_exist
  failed_when: test_repo_exist.rc == 127

- name: Restic | init repo if not created
  shell: 'restic -r s3:s3.amazonaws.com/$S3_BUCKET init'
  when: test_repo_exist.rc != 0

- name: Restic | copy the restic include file
  copy:
    src: backup_includes
    dest: /home/zach/.backup_includes

- name: Restic | run a backup if new repo
  shell: 'restic -r s3:s3.amazonaws.com/$S3_BUCKET backup --files-from=/home/zach/.backup_includes'

- name: Restic | create the cron backup job
  cron:
    name: backup
    weekday: "1"
    minute: "15"
    hour: "1"
    user: "zach"
    job: "restic -r s3:s3.amazonaws.com/$S3_BUCKET backup --files-from /home/zach/.restic-includes"

- name: Restic | create the cron prune job
  cron:
    name: prune
    weekday: "6"
    minute: "15"
    hour: "1"
    user: "zach"
    job: "restic -r s3:s3.amazonaws.com/$S3_BUCKET forget --keep-last 3 --prune"

- name: reload restart user cron
  systemd:
    name: crond
    state: restarted
    daemon-reload: yes
    scope: user
